<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="adminTimetable">

    <!-- 상영 시간표 개수 조회 -->
    <select id="countTimetables" parameterType="java.util.Map" resultType="int">
        SELECT COUNT(*)
        FROM timetable t
        INNER JOIN movie m ON t.movieIdx = m.movieIdx
        INNER JOIN theater th ON t.theaterIdx = th.theaterIdx
        INNER JOIN screen s ON t.screenIdx = s.screenIdx
        <where>
            <trim prefixOverrides="AND">
                <!-- 상영일 필터 조건 -->
                <if test="screeningDate != null and screeningDate != ''">
                    AND DATE(t.timetableStartTime) = #{screeningDate}
                </if>
                <!-- 현재 시간 이후 상영 일정 조건 추가 -->
                AND t.timetableStartTime >= NOW()
                <if test="theaterIdx != null and theaterIdx != ''">
                    AND t.theaterIdx = #{theaterIdx}
                </if>
                <if test="screenIdx != null and screenIdx != ''">
                    AND t.screenIdx = #{screenIdx}
                </if>
                <if test="movieTitle != null and movieTitle != ''">
                    AND m.movieTitle LIKE CONCAT('%', #{movieTitle}, '%')
                </if>
            </trim>
        </where>
    </select>


    <!-- 상영 시간표 목록 조회 및 남은 좌석 수 포함 (페이징 적용) -->
    <select id="getTimetableList" parameterType="java.util.Map" resultType="mybatis.vo.TimetableVO">
        SELECT * FROM (
        SELECT
        @RN:=@RN+1 AS rnum, t.*,
        m.movieTitle, th.theaterName, s.screenName, s.screenSeatCount,
        (s.screenSeatCount - IFNULL(SUM(CASE WHEN ss.seatStatus IN (1, 2) THEN 1 ELSE 0 END), 0)) AS availableSeats
        FROM (
        SELECT @RN:=0
        ) r, timetable t
        INNER JOIN movie m ON t.movieIdx = m.movieIdx
        INNER JOIN theater th ON t.theaterIdx = th.theaterIdx
        INNER JOIN screen s ON t.screenIdx = s.screenIdx
        LEFT JOIN seatStatus ss ON t.timetableIdx = ss.timetableIdx AND ss.seatStatus = 0
        <where>
            <trim prefixOverrides="AND">
                <if test="screeningDate != null and screeningDate != ''">
                    AND DATE(t.timetableStartTime) = #{screeningDate}
                </if>
                <!-- 현재 시간 이후 상영 일정 조건 추가 -->
                AND t.timetableStartTime >= NOW()
                <if test="theaterIdx != null and theaterIdx != ''">
                    AND t.theaterIdx = #{theaterIdx}
                </if>
                <if test="screenIdx != null and screenIdx != ''">
                    AND t.screenIdx = #{screenIdx}
                </if>
                <if test="movieTitle != null and movieTitle != ''">
                    AND m.movieTitle LIKE CONCAT('%', #{movieTitle}, '%')
                </if>
            </trim>
        </where>
        GROUP BY t.timetableIdx
        ORDER BY t.timetableStartTime DESC
        ) temp
        WHERE temp.rnum BETWEEN #{begin} AND #{end}
    </select>



    <!-- 극장과 상영관 정보 조회 메서드 -->
    <select id="getTheatersWithScreens" resultType="java.util.Map">
        SELECT t.theaterIdx, t.theaterName, t.theaterRegion, s.screenIdx, s.screenName
        FROM theater t
        LEFT JOIN screen s ON t.theaterIdx = s.theaterIdx
        ORDER BY t.theaterIdx, s.screenIdx;
    </select>

    <!-- 관리자 상영시간표 생성 관련 -->
    <!-- 특정 개수의 예매율 상위 영화 가져오기 -->
    <select id="getMoviesByRange" resultType="mybatis.vo.MovieVO" parameterType="java.util.Map">
        SELECT * FROM movie
        ORDER BY movieReservationRate DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>


    <!-- 영화 상영 시간표 삽입 -->
    <insert id="insertTimetable" parameterType="mybatis.vo.TimetableVO">
        INSERT INTO timetable ( movieIdx, theaterIdx, screenIdx, timetableStartTime, timetableEndTime )
        VALUES ( #{movieIdx}, #{theaterIdx}, #{screenIdx}, #{timetableStartTime}, #{timetableEndTime} )
    </insert>

    <!-- 특정 상영관 ID 조회 -->
    <select id="getScreenIdxByType" resultType="String">
        SELECT screenIdx
        FROM screen
        WHERE theaterIdx = #{theaterIdx}
        AND screenType = #{screenType}
        AND screenStatus = 0
        ORDER BY screenIdx
        LIMIT 1
    </select>

    <!-- 모든 극장 ID 조회 -->
    <select id="getAllTheaterIdx" resultType="String">
        SELECT theaterIdx
        FROM theater
        WHERE theaterStatus = 0
    </select>
</mapper>