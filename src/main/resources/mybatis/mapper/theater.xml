<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="theater">

    <select id="getTheaterInfo" resultType="mybatis.vo.TheaterVO">
        SELECT * FROM theater
    </select>

    <select id="getTheaterById" parameterType="map" resultType="mybatis.vo.TheaterVO">
        SELECT theaterIdx, theaterName, theaterRegion, theaterAddress, theaterInfo, theaterImageUrl, theaterScreenCount, theaterRegDate, theaterStatus
        FROM theater
        WHERE theaterIdx = #{theaterIdx}
    </select>

    <select id="getFavorite" parameterType="map" resultType="map">
        SELECT t.theaterName, t.theaterIdx
        FROM favoriteTheater f
        JOIN theater t ON f.theaterIdx = t.theaterIdx
        WHERE f.userIdx = #{userIdx}
    </select>

    <select id="getPrice" parameterType="map" resultType="mybatis.vo.PriceVO">
        SELECT screenType, dayOfWeek, timeOfDay,
        MAX(CASE WHEN ageGroup = 1 THEN seatPrice END) AS generalPrice,
        MAX(CASE WHEN ageGroup = 2 THEN seatPrice END) AS teenPrice
        FROM price GROUP BY screenType, dayOfWeek, timeOfDay
    </select>

    <!-- 전체 극장 조회 -->
    <select id="getTheaterRegion" resultType="map">
        SELECT t.theaterRegion AS region, COUNT(*) AS count
        FROM theater t
        WHERE t.theaterStatus = 0
        GROUP BY t.theaterRegion
    </select>

    <!-- 지역별 극장 리스트 -->
    <select id="getTheaterName" parameterType="String" resultType="mybatis.vo.TheaterVO">
        SELECT *
        FROM theater
        WHERE theaterRegion = #{region}
    </select>

    <!-- 극장 내 이벤트 -->
    <select id="getEvent" parameterType="map" resultType="mybatis.vo.EventVO">
        SELECT t.theaterName, b.boardTitle, b.boardContent, b.boardIdx
        FROM board b
        LEFT JOIN theater t ON b.theaterIdx = t.theaterIdx
        WHERE b.boardType = 'EVENT' AND b.boardStatus = 0 AND b.theaterIdx is not NULL
        ORDER BY b.boardRegDate DESC
        LIMIT 2
    </select>

    <select id="getNotice" parameterType="map" resultType="mybatis.vo.EventVO">
        SELECT t.theaterName, t.theaterRegion, b.boardIdx, b.boardTitle, DATE(b.boardRegDate) as boardRegDate
        FROM board b
        LEFT JOIN theater t ON b.theaterIdx = t.theaterIdx
        WHERE b.boardType = 'NOTICE' AND b.boardStatus = 0 AND b.theaterIdx is not NULL
        ORDER BY b.boardRegDate DESC
        LIMIT 5
    </select>

    <!--  관리자  -->
    <!-- 총 극장 수를 반환하는 기능 -->
    <select id="getTotalCount" resultType="int">
        SELECT COUNT(*)
        FROM theater t
        JOIN screen s ON t.theaterIdx = s.theaterIdx
        JOIN timetable tt ON s.screenIdx = tt.screenIdx
        JOIN movie m ON tt.movieIdx = m.movieIdx
        AND tt.timetableEndTime >= NOW()
    </select>

    <!-- 검색 조건에 맞는 극장 정보 개수 조회 (검색 페이징용) -->
    <select id="getFilteredCount" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM theater t
        JOIN screen s ON t.theaterIdx = s.theaterIdx
        JOIN timetable tt ON s.screenIdx = tt.screenIdx
        JOIN movie m ON tt.movieIdx = m.movieIdx
        WHERE 1=1
        <if test="searchType == 'region' and searchKeyword != null and searchKeyword != ''">
            AND t.theaterRegion LIKE CONCAT('%', #{searchKeyword}, '%')
        </if>
        <if test="searchType == 'theater' and searchKeyword != null and searchKeyword != ''">
            AND t.theaterName LIKE CONCAT('%', #{searchKeyword}, '%')
        </if>
        <if test="searchType == 'screen' and searchKeyword != null and searchKeyword != ''">
            AND s.screenName LIKE CONCAT('%', #{searchKeyword}, '%')
        </if>
        <choose>
            <when test="searchType == 'screenType' and searchKeyword == 'COMFORT'">
                AND s.screenType = 1
            </when>
            <when test="searchType == 'screenType' and searchKeyword == 'VIP'">
                AND s.screenType = 2
            </when>
            <when test="searchType == 'screenType' and searchKeyword == 'DOLBY'">
                AND s.screenType = 3
            </when>
            <when test="searchType == 'screenType' and searchKeyword == '4DX'">
                AND s.screenType = 4
            </when>
            <when test="searchType == 'screenType' and searchKeyword == 'IMAX'">
                AND s.screenType = 5
            </when>
            <otherwise>
                AND s.screenType = #{searchKeyword}
            </otherwise>
        </choose>
        AND tt.timetableEndTime >= NOW()
        ORDER BY tt.timetableStartTime ASC
    </select>

    <!-- 검색 + 페이징 적용 -->
    <select id="searchTheater" parameterType="map" resultType="mybatis.vo.TheaterVO">
        SELECT
        t.theaterIdx AS theaterIdx,
        t.theaterRegion AS theaterRegion,
        t.theaterName AS theaterName,
        s.screenIdx AS screenIdx,
        s.screenName AS screenName,
        s.screenStatus AS screenStatus,
        CASE s.screenType
        WHEN 1 THEN 'COMFORT'
        WHEN 2 THEN 'VIP'
        WHEN 3 THEN 'DOLBY'
        WHEN 4 THEN '4DX'
        WHEN 5 THEN 'IMAX'
        END AS screenType,
        DATE(tt.timetableStartTime) AS date,
        TIME(tt.timetableStartTime) AS startTime,
        TIME(tt.timetableEndTime) AS endTime,
        s.screenSeatCount AS totalSeats,
        (s.screenSeatCount - IFNULL(
        (SELECT COUNT(*)
        FROM seat s2
        JOIN seatStatus ss ON s2.seatIdx = ss.seatIdx
        WHERE s2.screenIdx = s.screenIdx
        AND ss.timetableIdx = tt.timetableIdx
        AND ss.seatStatus = 1), 0)
        ) AS remainingSeats
        FROM theater t
        JOIN screen s ON t.theaterIdx = s.theaterIdx
        JOIN timetable tt ON s.screenIdx = tt.screenIdx
        JOIN movie m ON tt.movieIdx = m.movieIdx
        WHERE 1=1
            <!-- 검색 조건은 원하는 컬럼명으로 변경합니다. 예: -->
            <if test="searchType == 'theater' and searchKeyword != null and searchKeyword != ''">
                AND t.theaterName LIKE CONCAT('%', #{searchKeyword}, '%')
            </if>
            <if test="searchType == 'region' and searchKeyword != null and searchKeyword != ''">
                AND t.theaterRegion LIKE CONCAT('%', #{searchKeyword}, '%')
            </if>
            <if test="searchType == 'screen' and searchKeyword != null and searchKeyword != ''">
                AND s.screenName LIKE CONCAT('%', #{searchKeyword}, '%')
            </if>
        <choose>
            <when test="searchType == 'screenType' and searchKeyword == 'COMFORT'">
                AND s.screenType = 1
            </when>
            <when test="searchType == 'screenType' and searchKeyword == 'VIP'">
                AND s.screenType = 2
            </when>
            <when test="searchType == 'screenType' and searchKeyword == 'DOLBY'">
                AND s.screenType = 3
            </when>
            <when test="searchType == 'screenType' and searchKeyword == '4DX'">
                AND s.screenType = 4
            </when>
            <when test="searchType == 'screenType' and searchKeyword == 'IMAX'">
                AND s.screenType = 5
            </when>
            <otherwise>
                AND s.screenType = #{searchKeyword}
            </otherwise>
        </choose>
        AND tt.timetableEndTime >= NOW()
        ORDER BY tt.timetableStartTime ASC
        LIMIT #{offset}, #{limit}
    </select>

    <!-- 극장 정보 및 좌석 현황 조회 -->
    <select id="getTheaterList" parameterType="map" resultType="mybatis.vo.TheaterVO">
        SELECT
        t.theaterIdx AS theaterIdx,
        t.theaterRegion AS theaterRegion,
        t.theaterName AS theaterName,
        s.screenName AS screenName,
        s.screenStatus AS screenStatus,
        t.theaterStatus AS theaterStatus,
        CASE s.screenType
        WHEN 1 THEN 'COMFORT'
        WHEN 2 THEN 'VIP'
        WHEN 3 THEN 'DOLBY'
        WHEN 4 THEN '4DX'
        WHEN 5 THEN 'IMAX'
        END AS screenType,
        DATE(tt.timetableStartTime) AS date,
        TIME(tt.timetableStartTime) AS startTime,
        TIME(tt.timetableEndTime) AS endTime,
        s.screenSeatCount AS totalSeats,
        (s.screenSeatCount - IFNULL(
        (SELECT COUNT(*)
        FROM seat s2
        JOIN seatStatus ss ON s2.seatIdx = ss.seatIdx
        WHERE s2.screenIdx = s.screenIdx
        AND ss.timetableIdx = tt.timetableIdx
        AND ss.seatStatus = 1), 0)
        ) AS remainingSeats
        FROM theater t
        JOIN screen s ON t.theaterIdx = s.theaterIdx
        JOIN timetable tt ON s.screenIdx = tt.screenIdx
        JOIN movie m ON tt.movieIdx = m.movieIdx
        WHERE tt.timetableEndTime >= NOW()
        ORDER BY t.theaterRegion, t.theaterName, s.screenName, tt.timetableStartTime
        LIMIT #{offset}, #{limit}
    </select>

    <!-- 극장 정보 업데이트 -->
    <update id="updateTheater" parameterType="mybatis.vo.TheaterVO">
        UPDATE theater
        SET
        theaterName = #{theaterName},
        theaterRegion = #{theaterRegion},
        theaterStatus = #{theaterStatus},
        screenStatus = #{screenStatus}
        WHERE theaterIdx = #{theaterIdx}
    </update>


</mapper>