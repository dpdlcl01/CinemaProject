<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="payment">

    <!-- 전체 결제 내역 개수 반환 (동적 쿼리) -->
    <select id="countPayments" resultType="int" parameterType="java.util.Map">
        SELECT COUNT(*)
        FROM payment p
        LEFT JOIN user u ON p.userIdx = u.userIdx
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <!-- 조건 없는 경우 전체 데이터를 반환 -->
            <if test="(paymentStatus == null or paymentStatus == '') and
              (paymentType == null or paymentType == '') and
              (searchType == null or searchType == 'all') and
              (paymentMonth == null or paymentMonth == '')">
                1 = 1  <!-- 조건이 없으면 항상 참인 조건 추가 -->
            </if>
            <!-- 검색 대상 조건 처리 -->
            <if test="searchType != null and searchType != 'all' and searchValue != null and searchValue != ''">
                <choose>
                    <when test="searchType == 'user'">
                        AND u.userId LIKE CONCAT('%', #{searchValue}, '%')
                    </when>
                    <when test="searchType == 'transactionId'">
                        AND p.paymentTransactionId LIKE CONCAT('%', #{searchValue}, '%')
                    </when>
                    <when test="searchType == 'reservation'">
                        AND p.reservationIdx = #{searchValue}
                    </when>
                    <when test="searchType == 'product'">
                        AND p.productIdx = #{searchValue}
                    </when>
                </choose>
            </if>

            <!-- 결제 상태 검색 조건 -->
            <if test="paymentStatus != null and paymentStatus != ''">
                AND p.paymentStatus = #{paymentStatus}
            </if>

            <!-- 결제 종류 검색 조건 -->
            <if test="paymentType != null and paymentType != ''">
                AND p.paymentType = #{paymentType}
            </if>

            <!-- 결제 월 검색 조건 -->
            <if test="paymentMonth != null and paymentMonth != ''">
                AND DATE_FORMAT(p.paymentDate, '%Y-%m') = #{paymentMonth}
            </if>
        </trim>
    </select>

    <!-- 결제 내역 목록 반환 (동적 쿼리) -->
    <select id="getPaymentList" resultType="mybatis.vo.PaymentVO" parameterType="java.util.Map">
        SELECT p.*, u.userId
        FROM payment p
        LEFT JOIN user u ON p.userIdx = u.userIdx
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <!-- 조건 없는 경우 전체 데이터를 반환 -->
            <if test="(paymentStatus == null or paymentStatus == '') and
                  (paymentType == null or paymentType == '') and
                  (searchType == null or searchType == 'all') and
                  (paymentMonth == null or paymentMonth == '')">
                1 = 1
            </if>
            <!-- 검색 대상 조건 처리 -->
            <if test="searchType != null and searchType != 'all' and searchValue != null and searchValue != ''">
                <choose>
                    <when test="searchType == 'user'">
                        AND u.userId LIKE CONCAT('%', #{searchValue}, '%')
                    </when>
                    <when test="searchType == 'transactionId'">
                        AND p.paymentTransactionId LIKE CONCAT('%', #{searchValue}, '%')
                    </when>
                    <when test="searchType == 'reservation'">
                        AND p.reservationIdx = #{searchValue}
                    </when>
                    <when test="searchType == 'product'">
                        AND p.productIdx = #{searchValue}
                    </when>
                </choose>
            </if>
            <!-- 결제 상태 검색 조건 -->
            <if test="paymentStatus != null and paymentStatus != ''">
                AND p.paymentStatus = #{paymentStatus}
            </if>
            <!-- 결제 종류 검색 조건 -->
            <if test="paymentType != null and paymentType != ''">
                AND p.paymentType = #{paymentType}
            </if>
            <!-- 결제 월 검색 조건 -->
            <if test="paymentMonth != null and paymentMonth != ''">
                AND DATE_FORMAT(p.paymentDate, '%Y-%m') = #{paymentMonth}
            </if>
        </trim>
        ORDER BY p.paymentDate DESC
        LIMIT #{begin}, #{limit}
    </select>



    <!-- 결제 idx를 받아서 해당 결제 정보 반환 -->
    <select id="getPaymentByIdx" parameterType="String" resultType="mybatis.vo.PaymentVO">
        SELECT * FROM payment
        WHERE paymentIdx = #{paymentIdx}
    </select>


    <select id="getTotalCount" resultType="int">
        SELECT COUNT(*) FROM payment;
    </select>

    <select id="selectByPage" parameterType="map" resultType="mybatis.vo.PaymentVO">
        SELECT * FROM payment
        ORDER BY paymentDate DESC
        LIMIT #{limit} OFFSET #{offset};
    </select>

    <select id="searchSelect" parameterType="String" resultType="mybatis.vo.PaymentVO">
        SELECT p.*, r.productName
        FROM user u
        INNER JOIN payment p ON u.userIdx = p.userIdx
        LEFT JOIN product r ON p.productIdx = r.productIdx
        WHERE u.userId = #{userName};
    </select>

    <insert id="insertPayment" parameterType="mybatis.vo.PaymentVO">
        INSERT INTO payment (
        userIdx, paymentType,productIdx,paymentQuantiy, paymentMethod,
        paymentTotal, paymentDiscount, paymentFinal, paymentTransactionId,
        paymentDate, paymentStatus
        ) VALUES (
        #{userIdx}, #{paymentType},#{productIdx},#{paymentQuantiy}, #{paymentMethod},
        #{paymentTotal}, #{paymentDiscount},#{paymentFinal}, #{paymentTransactionId},
        NOW(), #{paymentStatus}
        )
    </insert>
    <select id="totalSelect" resultType="mybatis.vo.PaymentVO">
        SELECT p.*, r.productName
        FROM payment p
        LEFT JOIN product r
        ON p.productIdx = r.productIdx;
    </select>


</mapper>






