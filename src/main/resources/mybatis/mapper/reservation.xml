<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="reservation">

    <update id="cancelReservation" parameterType="String">
        UPDATE reservation r
        INNER JOIN payment p ON r.reservationIdx = p.reservationIdx
        SET r.reservationStatus = 1,
        p.paymentStatus = 1,
        p.paymentCancelDate = NOW()
        WHERE r.reservationIdx = #{reservationIdx}
    </update>



    <!--  예매 메인 > 좌석 선택으로 넘어갈 때  -->
    <insert id="insertReservation" parameterType="Map">
        INSERT INTO reservation *
        VALUES (#{userIdx}, #{theaterIdx}, #{movieIdx}, #{timetableIdx}, NOW(), 0)
    </insert>

    <!-- 예매 가능한 영화 조회  -->
    <select id="movieList" parameterType="map" resultType="mybatis.vo.MovieVO">
        SELECT *
        FROM movie
        WHERE movieStatus = 0 OR movieStatus = 1
    </select>

    <!-- 특정 영화 및 극장의 모든 상영 시간표 조회 -->
    <select id="allTimetable" parameterType="Map" resultType="mybatis.vo.TimetableVO">
        SELECT t.timetableIdx, t.timetableStartTime, t.timetableEndTime, t.movieIdx, t.theaterIdx, t.screenIdx,
        s.screenName AS screenName, s.screenType AS screenType, s.screenSeatCount AS screenSeatCount,
        -- 사용 가능한 좌석 수 계산 (전체 좌석 수 - 예약된 좌석 수 - 임시 확보된 좌석 수)
        (s.screenSeatCount - (SELECT COUNT(*) FROM seatStatus ts WHERE ts.timetableIdx = t.timetableIdx AND ts.seatStatus IN (1, 2)) ) AS availableSeats
        FROM timetable t
        JOIN screen s ON t.screenIdx = s.screenIdx
        WHERE t.theaterIdx = #{theaterIdx}
        AND t.movieIdx = #{movieIdx}
        AND DATE(t.timetableStartTime) = #{targetDate}
        ORDER BY t.timetableStartTime ASC
    </select>

    <!--  영화 선택 후 극장 필터링  -->
    <select id="getAvailableTheaters" parameterType="map" resultType="mybatis.vo.TimetableVO">
        SELECT tt.movieIdx, t.theaterIdx, t.theaterName, t.theaterRegion
        FROM timetable tt
        JOIN theater t ON tt.theaterIdx = t.theaterIdx
        WHERE tt.movieIdx = #{movieIdx}
        AND DATE(tt.timetableStartTime) = #{targetDate}
        GROUP BY tt.movieIdx, t.theaterIdx, t.theaterName, t.theaterRegion
    </select>

    <!--  극장 선택 후 영화 필터링  -->
    <select id="getAvailableMovies" parameterType="map" resultType="int">
        SELECT DISTINCT m.movieIdx
        FROM timetable tt
        JOIN movie m ON tt.movieIdx = m.movieIdx
        WHERE tt.theaterIdx = #{theaterIdx}
        AND DATE(tt.timetableStartTime) = #{targetDate}
    </select>


    <!--  영화 정보 상세 조회 (seat)  -->
    <select id="movieDetail" parameterType="String" resultType="mybatis.vo.MovieVO">
        SELECT *
        FROM movie
        WHERE movieIdx = #{movieIdx}
    </select>

  <!--  영화 시간 정보 상세 조회 (seat)  -->
  <select id="timetableDetail" parameterType="String" resultType="mybatis.vo.TimetableVO">
    SELECT *
    FROM timetable
    WHERE timetableIdx = #{timetableIdx}
  </select>

  <!--  극장 정보 상세 조회 (seat)  -->
  <select id="theaterDetail" parameterType="String" resultType="mybatis.vo.TheaterVO">
    SELECT *
    FROM theater
    WHERE theaterIdx = #{theaterIdx}
  </select>

  <update id="updateReservation" parameterType="String">
    UPDATE reservation
    SET reservationStatus = 1
    WHERE reservationIdx=#{ridx};
  </update>

</mapper>